{"version":3,"sources":["components/Header.tsx","API.ts","App.tsx","Store.tsx","Items.tsx","Routes.tsx","index.tsx"],"names":["Header","inventory","setInventory","useState","flag","setFlag","className","to","onClick","onKeyPress","role","tabIndex","length","onMouseLeave","setTimeout","reduce","a","e","price","toFixed","type","map","arg","i","URL","src","imageURL","alt","name","quantity","key","preventDefault","copy","splice","TWITCH_CLIENT_ID","ACCESS_TOKEN","END_POINT","params","fetch","method","headers","Authorization","body","json","data","getGameData","App","newGames","setNewGames","counter","setCounter","useEffect","fetchNewGames","interval","setInterval","prev","clearInterval","forEach","artworks","Image","image_id","style","backgroundImage","slug","cover","id","Store","items","setItems","searchValue","setSearchValue","loading","setLoading","fetchStoreData","placeholder","onKeyUp","currentTarget","value","genres","genre","index","Items","match","item","setItem","fetchItem","console","log","screenshots","image","margin","paddingRight","platforms","platform","abbreviation","release_dates","human","aggregated_rating","toString","some","produce","draft","findIndex","deepCopy","storyline","summary","Routes","basename","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"wWAkHeA,EAhGiB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAC5C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,yBAAQC,UAAU,oBAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,IAA/B,sBAGA,qBAAKD,UAAU,OAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,SAA/B,wBAKJ,sBAAKD,UAAU,OAAf,UACE,sBACEA,UAAU,YACVE,QAAS,kBAAMH,GAASD,IACxBK,WAAY,kBAAMJ,GAASD,IAC3BM,KAAK,WACLC,SAAU,EALZ,UAOE,cAAC,IAAD,IACA,6BAAKV,EAAUW,YAEjB,sBACEN,UAAYF,EAAmB,eAAZ,UACnBS,aAAc,kBACZC,YAAW,WACTT,GAAQ,KACP,MALP,UAQE,sBAAKC,UAAU,wBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,+BAAKL,EAAUW,OAAf,oBAEF,sBAAKN,UAAU,OAAf,UACE,qBAAIA,UAAU,gBAAd,cACIL,EAAUc,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,QAAO,GAAGC,QAAQ,MAEtDlB,EAAUW,OAAS,GAClB,wBAAQQ,KAAK,SAASd,UAAU,kBAAhC,6BAMLL,EAAUoB,KAAI,SAACC,EAAKC,GACnB,OACE,eAAC,IAAD,CACEhB,GAAE,iBAAYe,EAAIE,KAElBlB,UAAU,kBAHZ,UAKE,qBACEmB,IAAG,gEAA2DH,EAAII,SAA/D,QACHC,IAAI,QACJrB,UAAU,mBAEZ,8BACE,oBAAIA,UAAU,gBAAd,SAA+BgB,EAAIM,SAErC,mCAAMN,EAAIJ,MAAMC,QAAQ,MACxB,qBAAIb,UAAU,iBAAd,iBAAiCgB,EAAIO,YACrC,qBACEvB,UAAU,SACVG,WAAY,SAACQ,GACX,GAAc,UAAVA,EAAEa,IAAiB,CACrBb,EAAEc,iBACF,IAAMC,EAAI,YAAO/B,GACjB+B,EAAKC,OAAOV,EAAG,GACfrB,EAAa8B,KAGjBtB,KAAK,WACLC,UAAW,EACXH,QAAS,SAACS,GACRA,EAAEc,iBACF,IAAMC,EAAI,YAAO/B,GACjB+B,EAAKC,OAAOV,EAAG,GACfrB,EAAa8B,IAhBjB,SAmBE,qDAhCGV,EAAIM,mBCtEnBM,EAAmB,iCACnBC,EAAe,wCACfC,EAAY,wD,4CA8BlB,WAA2BC,GAA3B,eAAArB,EAAA,sEAEUsB,MAAMF,EAAW,CACrBG,OAAQ,OACRC,QAAS,CACP,YAAaN,EACbO,cAAeN,GAEjBO,KAAML,IARZ,8BAUIM,OAVJ,cACQC,EADR,yBAYSA,GAZT,4C,sBAeeC,M,4CCmCAC,G,MAxEc,SAAC,GAA8C,IAAD,IAA3C7C,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aACzC,EAAgCC,mBAAoB,IAApD,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA8B7C,mBAAS,GAAvC,mBAAO8C,EAAP,KAAgBC,EAAhB,KA4BA,OA1BAC,qBAAU,WAAM,4CACd,4BAAAnC,EAAA,4DAEI,yKAFJ,SAGqB6B,EADjB,0KAFJ,OAGQD,EAHR,OAIEI,EAAYJ,GAJd,4CADc,uBAAC,WAAD,wBAOdQ,KACC,IAEHD,qBAAU,WACR,IAAME,EAAWC,aAAY,WAC3BJ,GAAW,SAACK,GAAD,OAAUA,EAAO,KACxBN,GAAWF,EAASnC,OAAS,GAAGsC,EAAW,KAC9C,MACH,OAAO,WACLM,cAAcH,MAEf,CAACJ,EAASF,EAASnC,OAAQmC,IAE9BI,qBAAU,WACRJ,EAASU,SAAQ,YAAmB,IAAhBC,EAAe,EAAfA,UAClB,IAAIC,OAAQlC,IAAZ,sEAAiFiC,EAAS,GAAGE,SAA7F,aAED,CAACb,IAGF,qCACE,cAAC,EAAD,CAAQ9C,UAAWA,EAAWC,aAAcA,IAC5C,iCACE,yDACA,sBAAKI,UAAU,sBAAf,UACGyC,EAASnC,OAAS,GACjB,qBACEN,UAAU,OACVuD,MAAO,CACLC,gBAAgB,oEAAD,iBAAsEf,EAASE,UAA/E,aAAsE,EAAmBS,SAAS,GAAGE,SAArG,WAHnB,SAME,cAAC,IAAD,CAAMtD,UAAU,OAAOC,GAAE,2BAAYwC,EAASE,UAArB,aAAY,EAAmBc,MAAxD,sBAKJ,qBAAKzD,UAAU,OAAf,SACGyC,EAAS1B,KAAI,SAACC,EAAKC,GAAN,OACZ,sBAEEjB,UAAWiB,IAAM0B,EAAU,QAAU,GACrCzC,QAAS,kBAAM0C,EAAW3B,IAC1Bd,WAAY,kBAAMyC,EAAW3B,IAC7Bb,KAAK,WACLC,SAAUY,EANZ,UAQE,qBACEE,IAAG,kEAA6DH,EAAI0C,MAAMJ,SAAvE,QACHjC,IAAI,eAEN,4BAAIL,EAAIM,SAXHN,EAAI2C,oB,iBCiBVC,G,MAlEgB,SAAC,GAA8C,IAA5CjE,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAC3C,EAA0BC,mBAAoB,IAA9C,mBAAOgE,EAAP,KAAcC,EAAd,KACA,EAAsCjE,mBAAS,IAA/C,mBAAOkE,EAAP,KAAoBC,EAApB,KACA,EAA8BnE,oBAAS,GAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KAeA,OAbArB,qBAAU,WAAM,4CACd,8BAAAnC,EAAA,6DACQqB,EACY,KAAhBgC,EACI,8HADJ,qHAEkHA,EAFlH,MAFJ,SAKqBxB,EAAYR,GALjC,OAKQO,EALR,OAMEwB,EAASxB,GACT4B,GAAW,GAPb,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACJ,IAGF,qCACE,cAAC,EAAD,CAAQpE,UAAWA,EAAWC,aAAcA,IAC5C,iCACE,sBAAKI,UAAU,wBAAf,UACE,cAAC,IAAD,CAAYA,UAAU,gBACtB,uBACEoE,YAAY,mBACZtD,KAAK,OACLd,UAAU,SACVqE,QAAS,SAAC1D,GACM,UAAVA,EAAEa,KAAiBwC,EAAerD,EAAE2D,cAAcC,aAI3DV,EAAMvD,OAAS,EACd,qBAAKN,UAAU,iBAAf,SACG6D,EAAM9C,KAAI,SAACC,EAAKC,GAAN,iBACT,eAAC,IAAD,CACEhB,GAAE,2BAAY4D,EAAM5C,UAAlB,aAAY,EAAUwC,MAExBzD,UAAU,QAHZ,UAKE,qBACEmB,IAAG,kEAAsDH,QAAtD,IAAsDA,GAAtD,UAAsDA,EAAK0C,aAA3D,aAAsD,EAAYJ,SAAlE,QACHjC,IAAI,OACJrB,UAAU,gBAEZ,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBgB,EAAIM,OAC1B,mBAAGtB,UAAU,SAAb,gBACGgB,QADH,IACGA,GADH,UACGA,EAAKwD,cADR,aACG,EAAazD,KAAI,SAAC0D,EAAOC,GAAR,OACN,IAAVA,EAAA,WAAkBD,EAAMnD,MAAxB,aAAuCmD,EAAMnD,KAA7C,UAGJ,oBAAItB,UAAU,QAAd,0BAfGgB,EAAI2C,SAoBI,IAAjBE,EAAMvD,QAAiB2D,EAEvB,KADF,oBAAIjE,UAAU,YAAd,6C,QCkGK2E,G,MAzJgB,SAAC,GAIZ,IAAD,EAHjBC,EAGiB,EAHjBA,MACAjF,EAEiB,EAFjBA,UACAC,EACiB,EADjBA,aAEA,EAAwBC,mBAAoB,IAA5C,mBAAOgF,EAAP,KAAaC,EAAb,KACA,EAA8BjF,oBAAS,GAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KACA,EAA8BrE,mBAAS,GAAvC,mBAAO8C,EAAP,KAAgBC,EAAhB,KA6BA,OA3BAC,qBAAU,WAAM,4CACd,8BAAAnC,EAAA,6DACQqB,EADR,kKAC4K6C,EAAM7C,OAAO4B,GADzL,wBAEqBpB,EAAYR,GAFjC,OAEQO,EAFR,OAGEwC,EAAQxC,GACR4B,GAAW,GAJb,4CADc,uBAAC,WAAD,wBAOda,KACC,CAACH,EAAM7C,OAAO4B,KAEjBd,qBAAU,WACR,IAAME,EAAWC,aAAY,WAC3BJ,GAAW,SAACK,GAAD,OAAUA,EAAO,KAC5B+B,QAAQC,IAAItC,GACRA,GAAWkC,EAAK,GAAGK,YAAY5E,OAAS,GAAGsC,EAAW,KACzD,KACH,OAAO,WACLM,cAAcH,MAEf,CAACJ,EAASkC,IAEbhC,qBAAU,WAAO,IAAD,EACd,UAAAgC,EAAK,UAAL,SAASK,YAAY/B,SAAQ,SAACgC,IAC5B,IAAI9B,OAAQlC,IAAZ,2DAAsEgE,EAAM7B,SAA5E,aAED,CAACuB,IAGF,qCACE,cAAC,EAAD,CAAQlF,UAAWA,EAAWC,aAAcA,IAC3CiF,EAAKvE,OAAS,EACb,iCACE,sBAAKN,UAAU,qBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB6E,EAAK,GAAGvD,OAC/B,sBAAKtB,UAAU,wBAAf,UACE,qBACEmB,IAAG,qEAAsD0D,EAAK,GAAGK,YAAYvC,UAA1E,aAAsD,EAA8BW,SAApF,QACHjC,IAAI,aACJrB,UAAU,eAEZ,qBAAKA,UAAU,uBAAf,SACG6E,EAAK,GAAGK,YAAYnE,KAAI,SAACC,EAAKC,GAAN,OACvB,qBACEf,QAAS,kBAAM0C,EAAW3B,IAC1Bd,WAAY,kBAAMyC,EAAW3B,IAC7Bb,KAAK,WACLC,SAAUY,EAJZ,SAOE,qBACEE,IAAG,qEAAgEH,EAAIsC,SAApE,QACHjC,IAAI,aACJrB,UACEiB,IAAM0B,EACF,uBACA,mBAENY,MACEtC,IAAM4D,EAAK,GAAGK,YAAY5E,OAAS,EAC/B,CAAE8E,OAAQ,KACV,MAbHpE,EAAI2C,YAoBjB,sBAAK3D,UAAU,iBAAf,UACE,qBACEmB,IAAG,4DAAuD0D,EAAK,GAAGnB,MAAMJ,SAArE,QACHjC,IAAI,QACJrB,UAAU,eAEZ,8BACE,sBAAMuD,MAAO,CAAE8B,aAAc,QAA7B,qBACCR,EAAK,GAAGL,OAAOzD,KAAI,SAAC0D,EAAOC,GAAR,OACR,IAAVA,EAAA,WAAkBD,EAAMnD,MAAxB,aAAuCmD,EAAMnD,KAA7C,WAGJ,8BACE,sBAAMiC,MAAO,CAAE8B,aAAc,QAA7B,wBACCR,EAAK,GAAGS,UAAUvE,KAAI,SAACwE,EAAUb,GAAX,OACX,IAAVA,EAAA,WACQa,EAASC,cADjB,aAEUD,EAASC,aAFnB,WAKJ,8BACE,sBAAMjC,MAAO,CAAE8B,aAAc,QAA7B,2BACCR,EAAK,GAAGY,cAAc,GAAGC,SAE5B,8BACE,sBAAMnC,MAAO,CAAE8B,aAAc,QAA7B,qBACCR,EAAK,GAAGc,kBAAkBC,WAAWtF,OAAS,EAC3CuE,EAAK,GAAGc,kBAAkB9E,QAAQ,GAClCgE,EAAK,GAAGc,kBAJd,OAOA,oBAAI3F,UAAU,cAAd,oBACA,wBACEA,UAAU,cACVc,KAAK,SACLZ,QAAS,WACP,GAAIP,EAAUkG,MAAK,qBAAGvE,OAAoBuD,EAAK,GAAGvD,QAAO,CACvD,IAAMI,EAAOoE,YAAQnG,GAAW,SAACoG,GAC/B,IAAMrB,EAAQ/E,EAAUqG,WACtB,qBAAG1E,OAAoBuD,EAAK,GAAGvD,QAE3B2E,EAAWF,EACjBE,EAASvB,GAAOnD,UAAY,EAE5B0E,EAASvB,GAAO9D,MADM,MAEJqF,EAASvB,GAAOnD,YAEpC3B,EAAa8B,QAEb9B,GAAa,SAACqD,GAAD,4BACRA,GADQ,CAEX,CACE3B,KAAMuD,EAAK,GAAGvD,KACdV,MAAO,MACPQ,SAAUyD,EAAK,GAAGnB,MAAMJ,SACxB/B,SAAU,EACVL,IAAK2D,EAAK,GAAGpB,YAxBvB,+BAiCJ,sBAAKzD,UAAU,2BAAf,UACE,kDACA,4BAAI6E,EAAK,GAAGqB,WAAarB,EAAK,GAAGsB,gBAGnB,IAAhBtB,EAAKvE,QAAiB2D,EAEtB,KADF,oBAAIjE,UAAU,YAAd,gCChIOoG,EA7BA,WACb,MAAkCvG,mBAAsB,IAAxD,mBAAOF,EAAP,KAAkBC,EAAlB,KAEA,OACE,cAAC,IAAD,CAAQyG,SAAS,iBAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,CAAK5G,UAAWA,EAAWC,aAAcA,MAE3C,cAAC,IAAD,CAAO0G,KAAK,SAASC,OAAK,EAA1B,SACE,cAAC,EAAD,CAAO5G,UAAWA,EAAWC,aAAcA,MAE7C,cAAC,IAAD,CACE0G,KAAK,aACLC,OAAK,EAELC,OAAQ,gBAAG5B,EAAH,EAAGA,MAAH,OACN,cAAC,EAAD,CACEA,MAAOA,EACPjF,UAAWA,EACXC,aAAcA,aCtB5B6G,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7feb005c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Header.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nexport interface Inventory {\n  name: string;\n  price: number;\n  imageURL: string;\n  quantity: number;\n  URL: string;\n}\n\ninterface Props {\n  inventory: Inventory[];\n  setInventory: React.Dispatch<React.SetStateAction<Inventory[]>>;\n}\n\nconst Header: React.FC<Props> = ({ inventory, setInventory }): JSX.Element => {\n  const [flag, setFlag] = useState(true);\n\n  return (\n    <header className=\"header flex white\">\n      <div className=\"flex\">\n        <Link className=\"white big\" to=\"/\">\n          PAYSTORE\n        </Link>\n        <nav className=\"flex\">\n          <Link className=\"nav white\" to=\"/store\">\n            Store\n          </Link>\n        </nav>\n      </div>\n      <div className=\"icon\">\n        <div\n          className=\"flex cart\"\n          onClick={() => setFlag(!flag)}\n          onKeyPress={() => setFlag(!flag)}\n          role=\"menuitem\"\n          tabIndex={0}\n        >\n          <ShoppingCartIcon />\n          <h4>{inventory.length}</h4>\n        </div>\n        <div\n          className={!flag ? 'history' : 'history hide'}\n          onMouseLeave={() =>\n            setTimeout(() => {\n              setFlag(true);\n            }, 1000)\n          }\n        >\n          <div className=\"checkout-summary flex\">\n            <div className=\"summary-left\">\n              <h3>{inventory.length} items added</h3>\n            </div>\n            <div className=\"flex\">\n              <h3 className=\"summary-right\">\n                ${inventory.reduce((a, e) => a + e.price, 0).toFixed(2)}\n              </h3>\n              {inventory.length > 0 && (\n                <button type=\"button\" className=\"checkout-button\">\n                  Check Out\n                </button>\n              )}\n            </div>\n          </div>\n          {inventory.map((arg, i) => {\n            return (\n              <Link\n                to={`/store/${arg.URL}`}\n                key={arg.name}\n                className=\"flex list white\"\n              >\n                <img\n                  src={`https://images.igdb.com/igdb/image/upload/t_cover_big/${arg.imageURL}.jpg`}\n                  alt=\"Cover\"\n                  className=\"checkout-image\"\n                />\n                <div>\n                  <h3 className=\"checkout-name\">{arg.name}</h3>\n                </div>\n                <h4>${arg.price.toFixed(2)}</h4>\n                <h4 className=\"checkout-price\">×{arg.quantity}</h4>\n                <div\n                  className=\"remove\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      const copy = [...inventory];\n                      copy.splice(i, 1);\n                      setInventory(copy);\n                    }\n                  }}\n                  role=\"menuitem\"\n                  tabIndex={-1}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const copy = [...inventory];\n                    copy.splice(i, 1);\n                    setInventory(copy);\n                  }}\n                >\n                  <p>Remove from cart</p>\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/* eslint-disable camelcase */\nconst TWITCH_CLIENT_ID = '7nyuo66bv5rgh251uw77xmstqk8g4g';\nconst ACCESS_TOKEN = 'Bearer lji16boycwnbyfww1t1goykar30yb1';\nconst END_POINT = 'https://cors.bridged.cc/https://api.igdb.com/v4/games';\n\nexport interface NewGame {\n  cover: {\n    image_id: string;\n  };\n  name: string;\n  id: string;\n  artworks: {\n    image_id: string;\n  }[];\n  slug: string;\n  genres: {\n    name: string;\n  }[];\n  screenshots: {\n    image_id: string;\n    id: string;\n  }[];\n  platforms: {\n    abbreviation: string;\n  }[];\n  release_dates: {\n    human: string;\n  }[];\n  aggregated_rating: number;\n  storyline: string;\n  summary: string;\n}\n\nasync function getGameData(params: string): Promise<NewGame[]> {\n  const data = await (\n    await fetch(END_POINT, {\n      method: 'POST',\n      headers: {\n        'Client-ID': TWITCH_CLIENT_ID,\n        Authorization: ACCESS_TOKEN,\n      },\n      body: params,\n    })\n  ).json();\n\n  return data;\n}\n\nexport default getGameData;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header, { Inventory } from './components/Header';\nimport getGameData, { NewGame } from './API';\nimport './styles/App.css';\n\ninterface Props {\n  inventory: Inventory[];\n  setInventory: React.Dispatch<React.SetStateAction<Inventory[]>>;\n}\n\nconst App: React.FC<Props> = ({ inventory, setInventory }): JSX.Element => {\n  const [newGames, setNewGames] = useState<NewGame[]>([]);\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    async function fetchNewGames() {\n      const params =\n        'fields cover.image_id,name,id,artworks.image_id,slug; where rating >= 80 & rating_count >= 5 & first_release_date > 1609426800; limit 6; sort first_release_date desc;';\n      const data = await getGameData(params);\n      setNewGames(data);\n    }\n    fetchNewGames();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((prev) => prev + 1);\n      if (counter >= newGames.length - 1) setCounter(0);\n    }, 7500);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [counter, newGames.length, newGames]);\n\n  useEffect(() => {\n    newGames.forEach(({ artworks }) => {\n      new Image().src = `https://images.igdb.com/igdb/image/upload/t_screenshot_huge/${artworks[0].image_id}.jpg`;\n    });\n  }, [newGames]);\n\n  return (\n    <>\n      <Header inventory={inventory} setInventory={setInventory} />\n      <main>\n        <h3>Newest Popular Releases</h3>\n        <div className=\"new-games-container\">\n          {newGames.length > 0 && (\n            <div\n              className=\"show\"\n              style={{\n                backgroundImage: `url(\"https://images.igdb.com/igdb/image/upload/t_screenshot_huge/${newGames[counter]?.artworks[0].image_id}.jpg\")`,\n              }}\n            >\n              <Link className=\"link\" to={`/store/${newGames[counter]?.slug}`}>\n                Browse\n              </Link>\n            </div>\n          )}\n          <div className=\"side\">\n            {newGames.map((arg, i) => (\n              <div\n                key={arg.id}\n                className={i === counter ? 'focus' : ''}\n                onClick={() => setCounter(i)}\n                onKeyPress={() => setCounter(i)}\n                role=\"menuitem\"\n                tabIndex={i}\n              >\n                <img\n                  src={`https://images.igdb.com/igdb/image/upload/t_cover_small/${arg.cover.image_id}.jpg`}\n                  alt=\"Game Cover\"\n                />\n                <p>{arg.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Header, { Inventory } from './components/Header';\nimport getGameData, { NewGame } from './API';\nimport './styles/Store.css';\n\ninterface Props {\n  inventory: Inventory[];\n  setInventory: React.Dispatch<React.SetStateAction<Inventory[]>>;\n}\n\nconst Store: React.FC<Props> = ({ inventory, setInventory }): JSX.Element => {\n  const [items, setItems] = useState<NewGame[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchStoreData() {\n      const params =\n        searchValue === ''\n          ? 'fields cover.image_id,name,id,slug,genres.name; where rating >= 80 & rating_count >= 100; limit 30; sort rating_count desc;'\n          : `fields cover.image_id,name,id,slug,genres.name; limit 30; where rating >= 70 & rating_count >= 60; search \"${searchValue}\";`;\n      const data = await getGameData(params);\n      setItems(data);\n      setLoading(false);\n    }\n    fetchStoreData();\n  }, [searchValue]);\n\n  return (\n    <>\n      <Header inventory={inventory} setInventory={setInventory} />\n      <main>\n        <div className=\"flex search-container\">\n          <SearchIcon className=\"search-icon\" />\n          <input\n            placeholder=\"Enter a title...\"\n            type=\"text\"\n            className=\"search\"\n            onKeyUp={(e) => {\n              if (e.key === 'Enter') setSearchValue(e.currentTarget.value);\n            }}\n          />\n        </div>\n        {items.length > 0 ? (\n          <div className=\"itemsContainer\">\n            {items.map((arg, i) => (\n              <Link\n                to={`/store/${items[i]?.slug}`}\n                key={arg.id}\n                className=\"items\"\n              >\n                <img\n                  src={`https://images.igdb.com/igdb/image/upload/t_720p/${arg?.cover?.image_id}.jpg`}\n                  alt=\"Game\"\n                  className=\"items-image\"\n                />\n                <div className=\"description\">\n                  <h4 className=\"name\">{arg.name}</h4>\n                  <p className=\"genres\">\n                    {arg?.genres?.map((genre, index) =>\n                      index === 0 ? ` ${genre.name}` : ` | ${genre.name} `\n                    )}\n                  </p>\n                  <h2 className=\"price\">$ 49.99</h2>\n                </div>\n              </Link>\n            ))}\n          </div>\n        ) : items.length === 0 && !loading ? (\n          <h1 className=\"not-found\">No search results found</h1>\n        ) : null}\n      </main>\n    </>\n  );\n};\n\nexport default Store;\n","/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport produce from 'immer';\nimport Header, { Inventory } from './components/Header';\nimport getGameData, { NewGame } from './API';\nimport './styles/Item.css';\n\ninterface Props {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  inventory: Inventory[];\n  setInventory: React.Dispatch<React.SetStateAction<Inventory[]>>;\n}\n\nconst Items: React.FC<Props> = ({\n  match,\n  inventory,\n  setInventory,\n}): JSX.Element => {\n  const [item, setItem] = useState<NewGame[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    async function fetchItem() {\n      const params = `fields cover.image_id,name,slug,genres.name,screenshots.*,release_dates.human,storyline,summary,platforms.abbreviation,aggregated_rating; where slug = \"${match.params.id}\"; limit 1;`;\n      const data = await getGameData(params);\n      setItem(data);\n      setLoading(false);\n    }\n    fetchItem();\n  }, [match.params.id]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((prev) => prev + 1);\n      console.log(counter);\n      if (counter >= item[0].screenshots.length - 1) setCounter(0);\n    }, 4000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [counter, item]);\n\n  useEffect(() => {\n    item[0]?.screenshots.forEach((image) => {\n      new Image().src = `https://images.igdb.com/igdb/image/upload/t_720p/${image.image_id}.jpg`;\n    });\n  }, [item]);\n\n  return (\n    <>\n      <Header inventory={inventory} setInventory={setInventory} />\n      {item.length > 0 ? (\n        <main>\n          <div className=\"main-container top\">\n            <h1 className=\"title\">{item[0].name}</h1>\n            <div className=\"screenshots-container\">\n              <img\n                src={`https://images.igdb.com/igdb/image/upload/t_720p/${item[0].screenshots[counter]?.image_id}.jpg`}\n                alt=\"Screenshot\"\n                className=\"screenshot\"\n              />\n              <div className=\"screenshots-rotation\">\n                {item[0].screenshots.map((arg, i) => (\n                  <div\n                    onClick={() => setCounter(i)}\n                    onKeyPress={() => setCounter(i)}\n                    role=\"menuitem\"\n                    tabIndex={i}\n                    key={arg.id}\n                  >\n                    <img\n                      src={`https://images.igdb.com/igdb/image/upload/t_screenshot_med/${arg.image_id}.jpg`}\n                      alt=\"Screenshot\"\n                      className={\n                        i === counter\n                          ? 'screenshot-small now'\n                          : 'screenshot-small'\n                      }\n                      style={\n                        i === item[0].screenshots.length - 1\n                          ? { margin: '0' }\n                          : {}\n                      }\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"side-container\">\n              <img\n                src={`https://images.igdb.com/igdb/image/upload/t_1080p/${item[0].cover.image_id}.jpg`}\n                alt=\"Cover\"\n                className=\"side-image\"\n              />\n              <p>\n                <span style={{ paddingRight: '60px' }}>Genres:</span>\n                {item[0].genres.map((genre, index) =>\n                  index === 0 ? ` ${genre.name}` : ` | ${genre.name} `\n                )}\n              </p>\n              <p>\n                <span style={{ paddingRight: '38px' }}>Platforms:</span>\n                {item[0].platforms.map((platform, index) =>\n                  index === 0\n                    ? ` ${platform.abbreviation}`\n                    : ` | ${platform.abbreviation} `\n                )}\n              </p>\n              <p>\n                <span style={{ paddingRight: '15px' }}>Release Date:</span>\n                {item[0].release_dates[0].human}\n              </p>\n              <p>\n                <span style={{ paddingRight: '72px' }}>Rating:</span>\n                {item[0].aggregated_rating.toString().length > 5\n                  ? item[0].aggregated_rating.toFixed(2)\n                  : item[0].aggregated_rating}\n                %\n              </p>\n              <h2 className=\"link button\">$49.99</h2>\n              <button\n                className=\"link button\"\n                type=\"button\"\n                onClick={() => {\n                  if (inventory.some(({ name }) => name === item[0].name)) {\n                    const copy = produce(inventory, (draft) => {\n                      const index = inventory.findIndex(\n                        ({ name }) => name === item[0].name\n                      );\n                      const deepCopy = draft;\n                      deepCopy[index].quantity += 1;\n                      const originalPrice = 49.99;\n                      deepCopy[index].price =\n                        originalPrice * deepCopy[index].quantity;\n                    });\n                    setInventory(copy);\n                  } else\n                    setInventory((prev) => [\n                      ...prev,\n                      {\n                        name: item[0].name,\n                        price: 49.99,\n                        imageURL: item[0].cover.image_id,\n                        quantity: 1,\n                        URL: item[0].slug,\n                      },\n                    ]);\n                }}\n              >\n                Add to cart\n              </button>\n            </div>\n          </div>\n          <div className=\"main-container storyline\">\n            <h3>About this game:</h3>\n            <p>{item[0].storyline || item[0].summary}</p>\n          </div>\n        </main>\n      ) : item.length === 0 && !loading ? (\n        <h1 className=\"not-found\">404 Not Found</h1>\n      ) : null}\n    </>\n  );\n};\n\nexport default Items;\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Store from './Store';\nimport Items from './Items';\nimport { Inventory } from './components/Header';\n\nconst Routes = (): JSX.Element => {\n  const [inventory, setInventory] = useState<Inventory[]>([]);\n\n  return (\n    <Router basename=\"/shopping-cart\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <App inventory={inventory} setInventory={setInventory} />\n        </Route>\n        <Route path=\"/store\" exact>\n          <Store inventory={inventory} setInventory={setInventory} />\n        </Route>\n        <Route\n          path=\"/store/:id\"\n          exact\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          render={({ match }: any) => (\n            <Items\n              match={match}\n              inventory={inventory}\n              setInventory={setInventory}\n            />\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}